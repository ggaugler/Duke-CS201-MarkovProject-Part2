This is the analysis for Markov Part 2, Spring 2019

Geoff Gaugler gg102

(1) Determine (from running Benchmark.java) how long it takes for 
BaseMarkov to generate 2,000, 4,000, 8,000, 16,000, and 32,000 
random characters using the default file and an order 5 Markov Model. 
Include these timings in your report. 
The program also generates 4,096 characters using texts that increase in 
size from 496,768 characters to 4,967,680 characters (10 times the number).  
Do the timings support the O(NT) analysis for BaseMarkov?

time	source	#chars
0.179	507914	2000
0.408	507914	4000
0.709	507914	8000
1.379	507914	16000
2.818	507914	32000

0.326	507914	4096
0.721	1015828	4096
1.083	1523742	4096
1.329	2031656	4096
1.696	2539570	4096
2.112	3047484	4096
2.454	3555398	4096
2.719	4063312	4096
3.184	4571226	4096
3.475	5079140	4096

Yes the timings do support the analysis - the time for 507,914 character text, .326, is about 1/10th of the time for 5,079,140 characters, 3.475.

(2) Determine (from running Benchmark.java) how long it takes for 
EfficientMarkov to generate 2,000, 4,000, 8,000, 16,000, and 32,000 
random characters using the default file and an order 5 Markov Model. 
Include these timings in your report. 
The program also generates 4,096 characters using texts that increase in 
size from 496,768 characters to 4,967,680 characters (10 times the number).  
Do the timings support the O(N+T) analysis for EfficientMarkov?

time	source	#chars
0.099	507914	2000
0.074	507914	4000
0.094	507914	8000
0.088	507914	16000
0.091	507914	32000

0.059	507914	4096
0.147	1015828	4096
0.253	1523742	4096
0.400	2031656	4096
0.385	2539570	4096
0.511	3047484	4096
0.552	3555398	4096
0.664	4063312	4096
0.725	4571226	4096
1.008	5079140	4096

Yes the timings do support the analysis, the times follow and N+T pattern.

(3)The tests in the class Benchmark use an order-5 Markov Model. 
Run tests that you think are appropriate to determine if the order of the 
Markov Model has a significant impact on the running time for BaseMarkov. 
Explain your reasoning.
Here are timings when I use an order-10 Markov model:
time	source	#chars
0.143	507914	2000
0.105	507914	4000
0.094	507914	8000
0.114	507914	16000
0.098	507914	32000

0.092	507914	4096
0.139	1015828	4096
0.284	1523742	4096
0.333	2031656	4096
0.433	2539570	4096
0.495	3047484	4096
0.566	3555398	4096
0.657	4063312	4096
0.793	4571226	4096
0.996	5079140	4096

These timings are not much greater than the timings of running an order-5 markov model. 
For example, with order-5 it took .091 seconds to generate 32,000 random characters,
and for an order-10 model it took .098 seconds - a .007 second increase which is very small
given the fact that the order was doubled.